---
import sanatoriosImg from '../../assets/select_pills_img/sanatorios.jpeg';
import centrosImagenesImg from '../../assets/select_pills_img/centros_imagenes.jpeg';
import hospitalesImg from '../../assets/select_pills_img/hospitales.jpeg';
import camarasColegiosImg from '../../assets/select_pills_img/camaras_colegios.jpeg';

const clients = [
  {
    name: "Sanatorios y Clínicas",
    description: "Gestionás consultorios, turnos, farmacia, laboratorio e internación con un flujo de trabajo integrado que mejora la atención y optimiza los recursos.",
    image: sanatoriosImg.src
  },
  {
    name: "Centros de diagnóstico por imágenes",
    description: "Administrás agendas, equipos, estudios, informes y facturación a obras sociales desde una plataforma centralizada y ágil.",
    image: centrosImagenesImg.src
  },
  {
    name: "Hospitales",
    description: "Controlás todo el circuito operativo: admisión, guardia, quirófano, camas, contabilidad y RR.HH., con trazabilidad completa y en tiempo real.",
    image: hospitalesImg.src
  },
  {
    name: "Colegios médicos/Cámaras de Salud",
    description: "Manejás matrículas, cuotas, capacitaciones y certificaciones, centralizando la gestión institucional y la relación con los profesionales.",
    image: camarasColegiosImg.src
  }
];

const heroContent = {
  title: "Instituciones que confían en nuestra tecnología"
};
---

<section class="case-studies-section" id="clientes">
  <div class="container">
    <h2 class="section-title">{heroContent.title}</h2>
    <div class="carousel-container">
      <div class="carousel-track">
        {clients.map((client, index) => (
          <div class="carousel-slide" data-index={index}>
            <div class="case-study-card">
              <div class="card-background">
                <img src={client.image} alt={client.name} />
              </div>
              <div class="description-bubble over-image">
                <h3 class="company-name">{client.name}</h3>
                <p class="description-text">{client.description}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
      <button class="carousel-arrow prev-arrow" aria-label="Previous slide">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      <button class="carousel-arrow next-arrow" aria-label="Next slide">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>
  </div>
</section>
<style>
.case-studies-section {
  background: #f8f9fa;
  padding: 80px 0;
  position: relative;
  overflow: hidden;
}
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
}
.section-title {
  text-align: center;
  font-size: 2.5rem;
  font-weight: 700;
  color: #333;
  margin-bottom: 3rem;
  position: relative;
}
.carousel-container {
  position: relative;
  overflow: hidden;
  padding: 0 60px;
  width: 100%;
}
.carousel-track {
  display: flex;
  transition: transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  gap: 0;
  width: 100%;
}
.carousel-slide {
  flex: 0 0 100%;
  min-width: 100%;
  max-width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}
.case-study-card {
  position: relative;
  height: 450px;
  border-radius: 20px;
  overflow: visible;
  margin: 0 5rem 5rem 5rem;
  z-index: 1;
}
.card-background {
  position: relative;
  width: 100%;
  height: 100%;
}
.card-background img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 20px;
}
.description-bubble.over-image {
  position: absolute;
  left: 50%;
  bottom: -2rem;
  transform: translateX(-50%);
  width: 85%;
  z-index: 1000;
  padding: 2.2rem 2.2rem 2rem 2.2rem;
  border-radius: 20px;
  box-shadow: 0 8px 24px 0 rgba(0,0,0,0.15), 0 2px 4px 0 rgba(0,0,0,0.1);
  background: #fff;
  text-align: center; 
}
.company-name {
  font-size: 1.5rem;
  font-weight: 800;
  text-align: center;
  color: var(--primary);
}
.carousel-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: white;
  border: none;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 10;
}
.carousel-arrow:hover {
  background: #f8f9fa;
  transform: translateY(-50%) scale(1.1);
}
.prev-arrow {
  left: 0;
}
.next-arrow {
  right: 0;
}

@media (max-width: 1200px) {
  .carousel-slide {
    min-width: 700px;
    max-width: 700px;
  }
  .case-study-card {
    height: 380px;
  }
  .description-bubble.over-image {
    width: 90%;
  }
}
@media (max-width: 1024px) {
  .carousel-slide {
    min-width: 500px;
    max-width: 500px;
  }
  .case-study-card {
    height: 380px;
  }
  .description-bubble.over-image {
    width: 95%;
  }
}
@media (max-width: 768px) {
  .case-studies-section {
    padding: 60px 0;
  }
  .container {
    padding: 0 1rem;
  }
  .section-title {
    font-size: 2rem;
    margin-bottom: 2rem;
  }
  .carousel-container {
    padding: 0 40px;
  }
  .carousel-slide {
    min-width: 250px;
    max-width: 100%;
	padding: 1rem;
	margin-bottom: 5rem;
  }
  .case-study-card {
    height: 220px;
    margin: 0 auto 2rem auto;
    width: 100%;
    max-width: 350px;
    padding-bottom: 1rem;
  }
  .card-content {
    padding: 1.2rem;
  }
  .company-name {
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
    color: #fff;
  }
  .case-description {
    font-size: 0.85rem;
  }
  .description-bubble.over-image {
    width: 90%;
    bottom: -0.8rem;
    padding: 1rem 0.8rem 0.8rem 0.8rem;
  }
  .carousel-arrow {
    width: 40px;
    height: 40px;
  }
}
@media (max-width: 480px) {
  .case-studies-section {
    padding: 40px 0;
  }
  .section-title {
    font-size: 1.8rem;
    margin-bottom: 1.5rem;
  }
  .carousel-container {
    padding: 0 30px;
  }
  .case-study-card {
    height: 200px;
    margin: 0 auto 1.5rem auto;
    width: 100%;
    max-width: 300px;
    padding-bottom: 0.8rem;
  }
  .card-content {
    padding: 1.2rem;
  }
  .company-name {
    font-size: 1.3rem;
    color: var(--primary);
  }
  .case-description {
    font-size: 0.85rem;
  }
  .description-bubble.over-image {
    width: 95%;
    bottom: -7rem;
  }
  .description-text {
    font-size: 0.8rem;
	margin-bottom: 0 !important;
  }
  .carousel-arrow {
    width: 35px;
    height: 35px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const track = document.querySelector('.carousel-track') as HTMLElement;
  const slides = document.querySelectorAll('.carousel-slide');
  const prevArrow = document.querySelector('.prev-arrow') as HTMLButtonElement;
  const nextArrow = document.querySelector('.next-arrow') as HTMLButtonElement;
  if (!track || !prevArrow || !nextArrow || slides.length === 0) {
    console.warn('Carousel elements not found');
    return;
  }
  let currentIndex = 0;
  const totalSlides = slides.length;
  updateCarousel();
  let autoPlayInterval = setInterval(nextSlide, 5000);
  track.addEventListener('mouseenter', () => {
    clearInterval(autoPlayInterval);
  });
  track.addEventListener('mouseleave', () => {
    autoPlayInterval = setInterval(nextSlide, 5000);
  });
  function nextSlide() {
    currentIndex = (currentIndex + 1) % totalSlides;
    updateCarousel();
  }
  function prevSlide() {
    currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
    updateCarousel();
  }
  function goToSlide(index: number) {
    currentIndex = index;
    updateCarousel();
  }
  function updateCarousel() {
    const offset = -currentIndex * 100;
    track.style.transform = `translateX(${offset}%)`;
  }
  prevArrow.addEventListener('click', () => {
    prevSlide();
    resetAutoPlay();
  });
  nextArrow.addEventListener('click', () => {
    nextSlide();
    resetAutoPlay();
  });
  function resetAutoPlay() {
    clearInterval(autoPlayInterval);
    autoPlayInterval = setInterval(nextSlide, 5000);
  }
  let startX = 0;
  let endX = 0;
  track.addEventListener('touchstart', (e: TouchEvent) => {
    startX = e.touches[0].clientX;
  });
  track.addEventListener('touchend', (e: TouchEvent) => {
    endX = e.changedTouches[0].clientX;
    handleSwipe();
  });
  function handleSwipe() {
    const swipeThreshold = 50;
    const diff = startX - endX;
    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0) {
        nextSlide();
      } else {
        prevSlide();
      }
      resetAutoPlay();
    }
  }
  // No resize handler necesario
});
</script>